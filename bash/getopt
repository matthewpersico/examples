#!/bin/bash

# "a" and "opta" have optional arguments with default values.
# "b" and "optb" have no arguments, acting as sort of a flag.
# "c" and "optc" have required arguments.
# "d" has no long variant
# "opte and optf" has no short variants
# set an initial value for the flag
OPT_B=0

# Read the options and args from command line. Note that the long and short
# don't have to match up.
TEMP=`getopt -o a::bc:dh --long opta::,optb,optc:,opte,optf,help -n 'test.sh' -- "$@"`

# Reset the command line ($@).
eval set -- "$TEMP"

# Reprocess the command line, extracting options and their arguments into
# variables.
while true ; do
    case "$1" in
        -a|--opta)
            case "$2" in
                "") OPT_A='some default value' ; shift 2 ;;
                *) OPT_A=$2 ; shift 2 ;;
            esac ;;
        -b|--optb) OPT_B=1 ; shift ;;
        -c|--optc)
            case "$2" in
                "") shift 2 ;;
                *) OPT_C=$2 ; shift 2 ;;
            esac ;;
        -d) OPT_D=1 ; shift ;;
        --opte) OPT_E=1 ; shift ;;
        --optf) OPT_F=1 ; shift ;;
        -h|--help)
            usage
            exit 0 ;;
        --) shift ; break ;; ## VITAL!!! Exits the while loop, no more options
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

# do something with the variables -- in this case the lamest possible one :-)
echo "OPT_A = $OPT_A"
echo "OPT_B = $OPT_B"
echo "OPT_C = $OPT_C"
echo "OPT_D = $OPT_D"
echo "OPT_E = $OPT_E"
echo "OPT_F = $OPT_F"
echo "args left: $@"
