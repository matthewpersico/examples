#!/bin/bash

# “a” and “arga” have optional arguments with default values.
# “b” and “argb” have no arguments, acting as sort of a flag.
# “c” and “argc” have required arguments.
# "d" has no long variant
# "arge and argf" has no short variants
# set an initial value for the flag
ARG_B=0

# read the options and args from command line. Note that the long and short
# don't have to match up.
TEMP=`getopt -o a::bc:d --long arga::,argb,argc:,arge,argf -n 'test.sh' -- "$@"`

# reset the command line ($@)
eval set -- "$TEMP"

# reprocess the command line, extracting options and their arguments into variables.
while true ; do
    case "$1" in
        -a|--arga)
            case "$2" in
                "") ARG_A='some default value' ; shift 2 ;;
                *) ARG_A=$2 ; shift 2 ;;
            esac ;;
        -b|--argb) ARG_B=1 ; shift ;;
        -c|--argc)
            case "$2" in
                "") shift 2 ;;
                *) ARG_C=$2 ; shift 2 ;;
            esac ;;
        -d) ARG_D=1 ; shift ;;
        --arge) ARG_E=1 ; shift ;;
        --argf) ARG_F=1 ; shift ;;
        --) shift ; break ;; ## VITAL!!! Exits the while loop, no more options
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

# do something with the variables -- in this case the lamest possible one :-)
echo "ARG_A = $ARG_A"
echo "ARG_B = $ARG_B"
echo "ARG_C = $ARG_C"
echo "ARG_D = $ARG_D"
echo "ARG_E = $ARG_E"
echo "ARG_F = $ARG_F"
echo "args left: $@"
