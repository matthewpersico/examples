#!/usr/bin/env perl

use strict;
use warnings;
use Carp;
use Data::Dumper;

sub return_my_arg {
    return $_[0];
}

sub return_after_a_0_call {
    return_my_arg(0);
    return;
}

=for later

sub return_after_a_1_call {
    return_my_arg(1);
    return;
}

sub return_after_an_undef_call {
    return_my_arg(undef);
    return;
}

=cut

sub after_a_0_call {
    return_my_arg(0);
}

sub return_after_a_carp {
    carp "called in return_after_a_carp";
    return;
}

sub return_nothing {
    return;
}

sub return_undef {
    return undef;
}


=for later

sub after_a_1_call {
    return_my_arg(1);
}

sub after_an_undef_call {
    return_my_arg(undef);
}

=cut

my $retval;

$retval = return_after_a_0_call();
$retval='undef' if not defined($retval);
print "retval of return_after_a_0_call is '$retval'\n";

#$retval = return_after_a_1_call();
#print "retval of return_after_a_1_call is '$retval'\n";

#$retval = return_after_an_undef_call();
#print "retval of return_after_an_undef_call is '$retval'\n";

$retval = after_a_0_call();
print "retval of after_a_0_call is '$retval'\n";

#$retval = after_a_1_call();
#print "retval of after_a_1_call is '$retval'\n";

#$retval = after_an_undef_call();
#print "retval of after_an_undef_call is '$retval'\n";

=for later

sub foo {
    my $v = $_[0];
    if ($v) {
        return $v;
    } else {
        return;
    }
}

for ( 0, 1, undef ) {
    print "foo($_) is '" . foo($_) . "'\n";
}

## Parens don't matter.
sub return_three_items {
    return 1, 2, 3;
}

sub return_a_list_of_three_items {
    return ( 1, 2, 3 );
}

use Data::Dumper;

$retval = return_three_items();
print Data::Dumper->Dump( [ ref($retval) ? $retval : \$retval ],
    [qw(*retval)] ), qq(\n);

$retval = return_a_list_of_three_items();
print Data::Dumper->Dump( [ ref($retval) ? $retval : \$retval ],
    [qw(*retval)] ), qq(\n);

=cut

my $racarp = return_after_a_carp;
$racarp = 'undef' if not defined $racarp;
print "Return after a carp call is $racarp\n";

my $r = return_nothing;
print "Return of nothing, scalar context:\n";
print Data::Dumper->Dump( [ \$r ], [qw(*r)] );

$r = return_undef;
print "Return of undef, scalar context:\n";
print Data::Dumper->Dump( [ \$r ], [qw(*r)] );

my @ra = return_nothing;
print "Return of nothing, list context:\n";
print Data::Dumper->Dump( [ \@ra ], [qw(*ra)] );

@ra = return_undef;
print "Return of undef, list context:\n";
print Data::Dumper->Dump( [ \@ra ], [qw(*ra)] );
